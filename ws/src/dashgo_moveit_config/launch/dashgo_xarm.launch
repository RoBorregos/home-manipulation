<launch>

  <arg name="robot_ip" />
  <arg name="report_type" default="normal" />	
  <!-- load the default move_group planner (not xarm_simple_planner) -->
  <arg name="show_rviz" default="true" />
  <!-- NO_GUI_CTRL means that Rviz configuration is just for display purpose, no (Moveit) control panel loaded -->
  <arg name="no_gui_plan" default="false" />
  <arg name="xarm_hw_ns" default="xarm" />
  <arg name="ext_ns" default="" />
  <arg name="velocity_control" default="false"/>
  <arg name="enforce_limits" default="true" />
  <arg name="baud_checkset" default="true" />
	<arg name="default_gripper_baud" default="2000000" />
  <arg name="jnt_stat_pub_rate" default="10" />

  <!-- common: bring up node to enable real xArm control -->
  <include file="$(find xarm_bringup)/launch/xarm6_server.launch">
    <arg name="robot_ip" value="$(arg robot_ip)" />
    <arg name="report_type" value="$(arg report_type)" />
    <arg name="use_moveit" value="true" />
    <arg name="ns" value="$(arg xarm_hw_ns)" />
    <arg name="velocity_control" value="$(arg velocity_control)" />
    <arg name="enforce_limits" value="$(arg enforce_limits)" />
    <arg name="baud_checkset" value="$(arg baud_checkset)" />
    <arg name="default_gripper_baud" value="$(arg default_gripper_baud)" />
  </include>

  <!-- load the joint trajectory controller specified in yaml -->
  <rosparam file="$(find xarm_controller)/config/xarm6/xarm6_controllers.yaml" command="load" ns="$(arg xarm_hw_ns)"/>
  <arg name="robot_controller_name" value="$(eval 'xarm6_velo_traj_controller' if arg('velocity_control') else 'xarm6_traj_controller')" />
  <node
    name="traj_controller_spawner"
    pkg="controller_manager"
    type="spawner"
    respawn="false"
    output="screen"
    ns="$(arg xarm_hw_ns)"
    args="$(arg robot_controller_name) joint_state_controller"/>

  <!-- from="/follow_joint_trajectory" should not remove "/" -->
  <!-- <remap from="/follow_joint_trajectory" to="xarm/xarm5_traj_controller/follow_joint_trajectory"/> -->
  <remap from="/follow_joint_trajectory" to="$(arg xarm_hw_ns)/$(arg robot_controller_name)/follow_joint_trajectory"/>

  <!-- load Neck, Gripper, Head Controllers -->
  <include file="$(find dashgo_moveit_config)/launch/moveitDashgoControllers.launch" />

  <!-- common part -->
  <remap from="/tf" to="$(arg ext_ns)/tf" />
  <remap from="/tf_static" to="$(arg ext_ns)/tf_static" />
  <remap from="/move_group/monitored_planning_scene" to="$(arg ext_ns)/move_group/monitored_planning_scene" />
  <remap from="$(arg ext_ns)/source_list" to="/source_list" />
  <include file="$(find dashgo_moveit_config)/launch/moveit_rviz_common.launch">
    <arg name="jnt_stat_source" value="[$(arg xarm_hw_ns)/joint_states, DASHGO/joint_states]" />
    <arg name="jnt_stat_pub_rate" value="$(arg jnt_stat_pub_rate)"/>
    <arg name="pipeline" default="ompl" />
    <arg name="show_rviz" value="$(arg show_rviz)" />
    <arg name="pub_static_odom" default="false" />
  </include>

  <!-- Run Octomap Toggle Service -->
  <node name="OctomapInput" pkg="dashgo_moveit_config" type="OctomapInput" output="screen" />

  <!-- If needed, broadcast static tf for robot root -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="virtual_joint_broadcaster_0" args="0 0 0 0 0 0 odom base_footprint" />
  <!-- <node name="azureSpeechText" pkg="action_selectors" type="AzureSpeechToText" output="screen" /> -->
  
</launch>
