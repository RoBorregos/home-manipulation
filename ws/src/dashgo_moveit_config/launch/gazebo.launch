<?xml version="1.0"?>
<launch>
  <!-- Gazebo options -->
  <arg name="gazebo_gui" default="true" doc="Start Gazebo GUI"/>
  <arg name="paused" default="false" doc="Start Gazebo paused"/>
  <arg name="world_name" default="worlds/empty.world" doc="Gazebo world file"/>
  <arg name="world_pose" default="-x 0 -y 0 -z 0 -R 0 -P 0 -Y 0" doc="Pose to spawn the robot at"/>
  <arg name="initial_joint_positions" default=" -J Cam1Rev1 0 -J Cam1Rev2 0 -J Rev1Servo 0 -J Rev2Servo 0 -J joint1 0 -J joint2 0 -J joint3 0 -J joint4 0 -J joint5 0 -J odom_r 0 -J odom_y 0" doc="Initial joint configuration of the robot"/>
  <arg name="gui" default="true" doc="Starts gazebo gui" />
  <arg name="effort_control" default="false"/>
  <arg name="velocity_control" default="false"/>
  <arg name="add_gripper" default="false" />
  <arg name="add_vacuum_gripper" default="false" />
  <arg name="namespace" default="xarm"/>
  <arg name="model1300" default="false" />
  <arg name="add_realsense_d435i" default="false" />
  <arg name="add_d435i_links" default="false" />
  <arg name="robot_sn" default="" />
  <arg name="xarm_velocity_control" value="$(eval arg('velocity_control') and not arg('run_demo'))" />

  <rosparam file="$(find xarm6_moveit_config)/config/xarm6_params.yaml" command="load" ns="$(arg namespace)"/>
  <rosparam if="$(arg add_gripper)" file="$(find xarm_controller)/config/gripper/gripper_gazebo_ros_control.yaml" command="load"/>

  <!-- Start Gazebo paused to allow the controllers to pickup the initial pose -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" pass_all_args="true">
    <arg name="paused" value="true"/>
  </include>

  <!-- Set the robot urdf on the parameter server -->
  <param name="robot_description" command="xacro  '$(find robot_description)/urdf/dashgo.urdf.xacro'" />
  <!-- <param name="robot_description" command="$(find xacro)/xacro
    inorder '$(find xarm_description)/urdf/xarm_device.urdf.xacro' robot_type:=xarm dof:=6
    add_gripper:=$(arg add_gripper) add_vacuum_gripper:=$(arg add_vacuum_gripper)
    effort_control:=$(arg effort_control) velocity_control:=$(arg xarm_velocity_control)
    model1300:=$(arg model1300)
    add_realsense_d435i:=$(arg add_realsense_d435i)
    add_d435i_links:=$(arg add_d435i_links)
    robot_sn:=$(arg robot_sn)
    "/> -->
  <!-- Unpause the simulation after loading the robot model -->
  <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />

  <!-- Spawn the robot in Gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot $(arg unpause) $(arg world_pose) $(arg initial_joint_positions)"
    respawn="false" output="screen" />

    <!-- load the corresponding controllers -->
    <include file="$(find xarm_controller)/launch/xarm6_control.launch">
      <arg name="run_demo_traj" value="false"/>
      <arg name="effort_control" value="$(arg effort_control)"/>
      <arg name="velocity_control" value="$(arg xarm_velocity_control)"/>
      <arg name="add_gripper" value="$(arg add_gripper)" />
      <arg name="namespace" value="$(arg namespace)" />
    </include>

  <!-- Load the controller parameters onto the parameter server -->
  <rosparam file="$(find dashgo_moveit_config)/config/gazebo_controllers.yaml" />
  <include file="$(dirname)/ros_controllers.launch"/>

  <!-- Spawn the Gazebo ROS controllers -->
  <node name="gazebo_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller" />

  <!-- Given the published joint states, publish tf for the robot links -->
  <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" /> -->
</launch>
