<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <arg name="rviz"  default="false"/>

  <!-- Load Params According to Robot -->
  <rosparam file="$(find pick_and_place)/config/params_DASHGO.yaml" command="load" />

  <!-- Load Cartesian server -->
  <node name="cartesian_server" pkg="cartesian_movement_services" type="cartesian_server.py" output="screen" />

  <!-- Pick & place server -->
  <node name="pick_and_place_server" pkg="pick_and_place" type="pick_and_place_server.py" output="screen" />

  <!-- 2D Detector -->
  <include file="$(find object_detector_2d)/launch/object_2D.launch" />

  <!-- 3D Detector -->
  
  <include file="$(find object_detector_3d)/launch/object_3D.tmr2023.launch">
    <arg name="MAP_FRAME" default="map" />
    <arg name="CAMERA_FRAME" default="zed2_left_camera_frame" />
    <arg name="BASE_FRAME" default="base_link" />
    <arg name="map_to_odom"  default="true"/>
    <arg name="odom_to_base_footprint"  default="true"/>
    <arg name="POINT_CLOUD_TOPIC" default="/zed2/zed_node/point_cloud/ds_cloud_registered" />
  </include>

  <!-- Manipulation Server -->
  <node name="manipulationServer" pkg="pick_and_place" type="cartesianManipulationServer.py" output="screen" />
  
  <!-- GPD -->
	<node name="detect_grasps_server_samples" pkg="gpd_ros" type="detect_grasps_server_samples" output="screen" respawn="true" args="">
    <param name="config_file" value="$(find pick_and_place)/config/dashgo_eigen_params_SF.cfg" />
    <param name="rviz_topic" value="plot_grasps" />
  </node>
  
  <!-- Manipulation Client | Running in separate shell -->
  <node name="manipulation_client" pkg="pick_and_place" type="manipulationClient.py" output="screen" />
  <node name="rviz" pkg="rviz" type="rviz" if="$(arg rviz)" args="-d $(find pick_and_place)/config/all.rviz"/>

  <!-- Nav Bridge Server -->
  <!-- <node name="NavBridgeServer" pkg="nav_bridge" type="NavBridgeServer.py" output="screen" /> -->

</launch>
